// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id         BigInt    @id @default(autoincrement())
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  deleted    Boolean   @default(false)
  nickname   String?
  intro      String?
  tags       Tag[]
  location   Location? @relation(fields: [locationId], references: [id], onDelete: Cascade)
  locationId BigInt?   @map("location_id")
  sector     Sector[]

  @@map("user")
}

model Tag {
  id        BigInt   @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  category  String?
  name      String
  deleted   Boolean  @default(false)
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    BigInt?  @map("user_id")

  @@map("tag")
}

model Location {
  id        BigInt   @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  deleted   Boolean  @default(false)
  user      User[]

  @@map("location")
}

model Sector {
  id        BigInt   @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  deleted   Boolean  @default(false)
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    BigInt?  @map("user_id")

  @@map("sector")
}
